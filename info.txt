At the beginning app synchronizes time stamp (TimestampThread) with master app (Vissim or Replayer)



This app reads (subscribes) 3 topics:

- Mri_TrafficVeh - locations of vehicles from Vissim
- Mri_SubjectCar - location of subject car from OpenDS
- Mri_V2XtoNS3 - V2X messages from V2X application

(DataReaders for these topics were defined in OpenDDST.cpp)


Info about current locations of all vehicles are stored in map:

std::map<long, Mri::VehData> vehs_map;   the key for this map (long) is a vehicle_id



V2X messages are received in procedure: 

void DataReaderListenerImpl_VehData::on_data_available(DDS::DataReader_ptr reader)

V2X messages are stored in thread safe queue:
QueueTs<Mri::VehData> vehdata_queue;

IN the main loop  there is a procedure which read V2X from this queue (every 100ms) and stores this messages in another map:
std::map<long, Mri::V2XMessage> v2xs_map;

This map stores all V2X messages, each message has unique key 'extended_timestamp' generated by function generateV2xUniqueTimestamp







